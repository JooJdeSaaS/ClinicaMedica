/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.20
 * Generated at: 2025-04-28 20:58:07 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class meu_005fcadastro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"pt-BR\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Painel do Paciente</title>\r\n");
      out.write("    <!-- Importa o CSS externo -->\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/meu_cadastro.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Menu de NavegaÃ§Ã£o -->\r\n");
      out.write("<div class=\"navbar\">\r\n");
      out.write("    <div class=\"nav-links\">\r\n");
      out.write("        <a href=\"paciente_dashboard\">Home</a>\r\n");
      out.write("        <a href=\"agendarConsulta\">Agendamento de Consultas</a>\r\n");
      out.write("        <a href=\"minha_agenda.jsp\">Minha Agenda</a>\r\n");
      out.write("        <a href=\"meu_cadastro.jsp\">Meu Cadastro</a>\r\n");
      out.write("        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/logout\" class=\"logout-link\">Logout</a>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- ConteÃºdo principal -->\r\n");
      out.write("<div class=\"cadastro-container\">\r\n");
      out.write("    <h2>Trocar informaÃ§Ãµes</h2>\r\n");
      out.write("    <form method=\"post\" action=\"meuCadastro\">\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <label for=\"nomenovo\">Nome:</label>\r\n");
      out.write("            <div class=\"current-value\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.nome}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("            <p class=\"change-label\">Trocar para:</p>\r\n");
      out.write("            <input type=\"text\" id=\"nomenovo\" name=\"nome\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${sessionScope.nome}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <!--TODO Porra professor, celular como float foi foda-->\r\n");
      out.write("            ");

                Long celular = (Long) session.getAttribute("celular");
                String celularFormatado = celular != null ? celular.toString() : "Valor nÃ£o disponÃ­vel";

                // Sempre assume que o celular tem 11 dÃ­gitos
                String celularFormatado2 = String.format("(%s) %s-%s",
                        celularFormatado.substring(0, 2),
                        celularFormatado.substring(2, 7),
                        celularFormatado.substring(7, 11));
            
      out.write("\r\n");
      out.write("            <label for=\"celularnovo\">Celular:</label>\r\n");
      out.write("            <div class=\"current-value\">");
      out.print( celularFormatado2 );
      out.write("</div>\r\n");
      out.write("            <p class=\"change-label\">Trocar para:</p>\r\n");
      out.write("            <input type=\"text\" id=\"celularnovo\" name=\"celular\" value=\"");
      out.print( celularFormatado );
      out.write("\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            ");

                String CPF = (String) session.getAttribute("cpf");

                // Sempre assume que o celular tem 11 dÃ­gitos
                String CPFFormatado = String.format("%s.%s.%s-%s",
                        CPF.substring(0, 3),
                        CPF.substring(3, 6),
                        CPF.substring(6, 9),
                        CPF.substring(9, 11));
            
      out.write("\r\n");
      out.write("            <label for=\"CPF\">CPF:</label>\r\n");
      out.write("            <div class=\"current-value\">");
      out.print( CPFFormatado );
      out.write("</div>\r\n");
      out.write("            <p class=\"change-label\">Trocar para:</p>\r\n");
      out.write("            <input type=\"text\" id=\"CPF\" name=\"CPF\" value=\"");
      out.print( CPF );
      out.write("\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"form-group\">\r\n");
      out.write("            <!--TODO como levar o email, pode ser pela sessÃ£o-->\r\n");
      out.write("            <label for=\"emailnovo\">E-mail:</label>\r\n");
      out.write("            <div class=\"current-value\">email da pessoa</div>\r\n");
      out.write("            <p class=\"change-label\">Trocar para:</p>\r\n");
      out.write("            <input type=\"text\" id=\"emailnovo\" name=\"email\" required>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <button type=\"submit\">Mudar</button>\r\n");
      out.write("    </form>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
